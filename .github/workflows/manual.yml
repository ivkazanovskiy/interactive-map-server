# This is a basic workflow that is manually triggered
name: Manual workflow

on:
  workflow_dispatch:
    inputs:
      choice:
        type: choice
        description: 'Restart nginx:'
        options:
          - http
          - https

jobs:
  copy-compose-to-server:
    environment:
      name: production
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Copy compose to server
        uses: appleboy/scp-action@master
        with:
          source: "compose.yml"
          target: ${{ vars.COMPOSE_PATH }}
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}

  copy-nginx_http-to-server:
    if: ${{ github.event.inputs.choice }} == "http"
    environment:
      name: production
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Copy compose to server
        uses: appleboy/scp-action@master
        with:
          source: nginx/http/nginx.conf
          target: ~/nginx/http
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}

  copy-nginx_https-to-server:
    if: ${{ github.event.inputs.choice }} == "https"
    environment:
      name: production
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Copy compose to server
        uses: appleboy/scp-action@master
        with:
          source: nginx/https/nginx.conf
          target: ~/nginx/https
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
  
  update-certificates:
    needs:
      - copy-nginx_http-to-server
      - copy-compose-to-server
    runs-on: ubuntu-latest
    environment:
      name: production
    steps:
      - uses: actions/checkout@v2
      - name: Run nginx_http job
        env:
          DOMAIN: ${{ secrets.DOMAIN }}
          DOMAIN_EMAIL: ${{ secrets.DOMAIN_EMAIL }}
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          envs: DOMAIN,DOMAIN_EMAIL
          script: |
            docker compose -f ~/compose/compose.yml up -d certbot

  restart-nginx_https:
    needs:
      - copy-nginx_https-to-server
      - copy-compose-to-server
    runs-on: ubuntu-latest
    environment:
      name: production
    steps:
      - uses: actions/checkout@v2
      - name: Run nginx_https job
        env:
          DOMAIN: ${{ secrets.DOMAIN }}
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          envs: DOMAIN
          script: |
            docker compose -f ~/compose/compose.yml up -d nginx_https
