name: Deployment

# on:
#   push:
#     branches: ["master"]

jobs:
  build:
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://github.com
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: production
    steps:
      - uses: actions/checkout@v2
      - name: Deploy to server
        env:
          IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:latest
          CONTAINER: ${{ github.event.repository.name }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          GOOGLE_CALLBACK_URL: ${{ secrets.GOOGLE_CALLBACK_URL }}
          STATIC_PATH: ${{ vars.STATIC_PATH }}
          NODE_ENV: ${{ vars.NODE_ENV }}
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          envs: IMAGE,CONTAINER,DB_HOST,DB_PORT,DB_USERNAME,DB_PASSWORD,DB_DATABASE,JWT_SECRET,GOOGLE_CLIENT_ID,GOOGLE_CLIENT_SECRET,GOOGLE_CALLBACK_URL,STATIC_PATH,NODE_ENV
          script: |
            docker stop /$CONTAINER
            docker rm /$CONTAINER
            docker rmi /$IMAGE
            docker run --name $CONTAINER --network dnd-net \
              -e DB_HOST=$DB_HOST \
              -e DB_PORT=$DB_PORT \
              -e DB_USERNAME=$DB_USERNAME \
              -e DB_PASSWORD=$DB_PASSWORD \
              -e DB_DATABASE=$DB_DATABASE \
              -e JWT_SECRET=$JWT_SECRET \
              -e GOOGLE_CLIENT_ID=$GOOGLE_CLIENT_ID \
              -e GOOGLE_CLIENT_SECRET=$GOOGLE_CLIENT_SECRET \
              -e GOOGLE_CALLBACK_URL=$GOOGLE_CALLBACK_URL \
              -e NODE_ENV=$NODE_ENV \
              -e HOST=0.0.0.0 \
              -d $IMAGE
  update_nginx:
    needs: deploy
    runs-on: ubuntu-latest
    environment:
      name: production
    steps:
      - uses: actions/checkout@v2
      - name: Deploy to server
        env:
          CONTAINER: ${{ github.event.repository.name }}
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          envs: CONTAINER
          script: |
            docker cp $CONTAINER:/usr/src/app/nginx.conf ~/nginx
            docker restart nginx
